{"version":3,"sources":["webpack:///../src/documentacao/docAutocomplete.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Autocomplete","__position","__code","__scope","Props","Playground","width","React","useState","valor","setValor","id","placeholder","menuPlacement","isClearable","loadOptions","Promise","resolve","codigo","descricao","getOptionValue","opcao","getOptionLabel","onChange","value","isMDXComponent"],"mappings":"2iBASO,IAAMA,EAAe,Q,sNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,cADR,cAIA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAAcF,QAAQ,UACjC,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,2pBAA8qBC,QAAS,CACxtBN,QACAH,kBACAU,UACAC,eACAL,kBACCM,MAAM,MAAMR,QAAQ,eACxB,WAAM,MACyBS,IAAMC,SAAS,IAAlCC,EADN,KACaC,EADb,KAmBD,OAAO,YAAC,IAAD,CAAcC,GAAG,eAAeC,YAAY,6BAA6BC,cAAc,SAASC,aAAW,EAACC,YAhB/F,WAClB,OAAOC,QAAQC,QAAQ,CAAC,CACtBC,OAAQ,IACRC,UAAW,WACV,CACDD,OAAQ,IACRC,UAAW,WACV,CACDD,OAAQ,IACRC,UAAW,WACV,CACDD,OAAQ,IACRC,UAAW,cAI8HC,eAAgB,SAAAC,GAAK,OAAIA,EAAMH,QAAQI,eAAgB,SAAAD,GAAK,OAAIA,EAAMF,WAAWI,SAAUb,EAAUc,MAAOf,EAAOX,QAAQ,qB,6MAOhRH,EAAW8B,gBAAiB","file":"component---src-documentacao-doc-autocomplete-mdx-e9414f0fc1da78a4250c.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/dti/repos/HP.Biblioteca.Componentes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Props } from \"docz\";\nimport Playground from \"./Playground\";\nimport Autocomplete from \"../componentes/autocomplete\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"datepicker\"\n    }}>{`Datepicker`}</h1>\n\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Autocomplete} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [valor, setValor] = React.useState(\\'\\')\\n  const loadOptions = () => {\\n    return Promise.resolve([\\n      { codigo: \\'1\\', descricao: \\'Opção 1\\' },\\n      { codigo: \\'2\\', descricao: \\'Opção 2\\' },\\n      { codigo: \\'3\\', descricao: \\'Opção 3\\' },\\n      { codigo: \\'4\\', descricao: \\'Opção 4\\' },\\n    ])\\n  }\\n  return (\\n    <Autocomplete\\n      id=\\\"autocomplete\\\"\\n      placeholder=\\\"Componente de autocomplete\\\"\\n      menuPlacement=\\\"bottom\\\"\\n      isClearable\\n      loadOptions={loadOptions}\\n      getOptionValue={opcao => opcao.codigo}\\n      getOptionLabel={opcao => opcao.descricao}\\n      onChange={setValor}\\n      value={valor}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Props,\n      Playground,\n      Autocomplete\n    }} width=\"50%\" mdxType=\"Playground\">\n  {() => {\n        const [valor, setValor] = React.useState(\"\");\n\n        const loadOptions = () => {\n          return Promise.resolve([{\n            codigo: '1',\n            descricao: 'Opção 1'\n          }, {\n            codigo: '2',\n            descricao: 'Opção 2'\n          }, {\n            codigo: '3',\n            descricao: 'Opção 3'\n          }, {\n            codigo: '4',\n            descricao: 'Opção 4'\n          }]);\n        };\n\n        return <Autocomplete id='autocomplete' placeholder=\"Componente de autocomplete\" menuPlacement=\"bottom\" isClearable loadOptions={loadOptions} getOptionValue={opcao => opcao.codigo} getOptionLabel={opcao => opcao.descricao} onChange={setValor} value={valor} mdxType=\"Autocomplete\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}